{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACA,uBAAOO,KAAO,OACdC,MAAUT,EACVU,SAhBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPZ,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAEZ,CAACtB,IAEGuB,EDfuBM,CAAa7B,GAA/Ba,EAJuB,EAI5BN,KAAYe,EAJgB,EAIhBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEfxBmB,EAAe,WAAO,IAAD,EAEK5C,mBAAS,CAAC,cAFf,mBAEvB6C,EAFuB,KAEZ9C,EAFY,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAACT,EAASgC,GAAV,OACV,cAAC,EAAD,CAEGhC,SAAUA,GADLA,Y,MChBjCiC,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.c97b5250.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const hanldeInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            /* setCategories(cats => [...cats, inputValue]); */\r\n            setCategories(cats => [inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return ( \r\n        <form onSubmit = { handleSubmit } >\r\n        <input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { hanldeInputChange } > \r\n        </input> \r\n        </form >\r\n\r\n    )\r\n}\r\n\r\n/* Esta es una regla o pequeÃ±o candado para que utilizen nuestro componente que estoy esperando */\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=oVVIzv2jVnh2bnGW1Di4Z7Cd6oEkvQJ6`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) =>\r\n                        (<GifGridItem \r\n                            key={img.id}\r\n                            {...img}>\r\n                         </GifGridItem>)\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n            });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    /* const handleAdd = ()=>{\r\n        setCategories([...categories,'HunterXHunter']);\r\n        setCategories(cats =>[...cats,'HunterXHunter']);\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category,i) =>\r\n                        (<GifGrid\r\n                            key={category}\r\n                            category={category}>\r\n                        </GifGrid>)\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render( \n  <GifExpertApp / > ,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}